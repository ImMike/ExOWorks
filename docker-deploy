#!/bin/sh

# Build the new Docker image first. This ensures that the new image is ready
# before taking down the existing container, minimizing downtime.
echo "Building new Docker image..."
sudo DOCKER_BUILDKIT=1 docker build -t exoworks:latest .

# Check if a previous container exists using the container.id file
if [ -f "container.id" ]; then
    CONTAINER_ID=$(cat container.id)
    if [ -n "$CONTAINER_ID" ]; then
        # Stop and remove the old container based on the saved container ID
        echo "Stopping and removing old container: $CONTAINER_ID"
        sudo docker stop "$CONTAINER_ID"
        sudo docker rm "$CONTAINER_ID"
        # Optionally, remove the container.id file if you want to clean up,
        # but it will be overwritten later anyway.
        # rm container.id
    fi
fi

# Run the new container and save its ID to the container.id file for future reference
echo "Starting new container..."
NEW_CONTAINER_ID=$(sudo docker run --env-file=.env -dp 8765:80 exoworks:latest)
echo $NEW_CONTAINER_ID > container.id

echo "Deployment complete." 